[package]
name = "node-polkadex-runtime"
version = "5.3.0"
authors = ["Polkadex OÃœ  <https://polkadex.trade>"]
edition = "2021"
license = "GNU GPL v3"
homepage = "https://polkadex.trade"
repository = "https://github.com/Polkadex-Substrate/Polkadex"

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[dependencies]
parity-scale-codec = { workspace = true, default-features = false, features = ["max-encoded-len"] }
scale-info = { workspace = true, default-features = false, features = ["derive"] }
hex-literal = { version = "0.3.1", optional = true }
static_assertions = { workspace = true }
log = { workspace = true, default-features = false }
#pallets
#added
pallet-authorship = { default-features = false, workspace = true }
pallet-babe = { default-features = false, workspace = true }
pallet-balances = { default-features = false, workspace = true }
pallet-grandpa = { default-features = false, workspace = true }
pallet-im-online = { default-features = false, workspace = true }
pallet-offences = { default-features = false, workspace = true }
pallet-session = { default-features = false, workspace = true }
pallet-staking = { default-features = false, workspace = true }
pallet-multisig = { default-features = false, workspace = true }
pallet-staking-reward-curve = { workspace = true }
pallet-sudo = { default-features = false, workspace = true }
pallet-utility = { default-features = false, workspace = true }
pallet-timestamp = { default-features = false, workspace = true }
pallet-transaction-payment = { default-features = false, workspace = true }
pallet-transaction-payment-rpc-runtime-api = { default-features = false, workspace = true }
pallet-treasury = { default-features = false, workspace = true }
pallet-collective = { default-features = false, workspace = true }
pallet-democracy = { default-features = false, workspace = true }
pallet-elections-phragmen = { default-features = false, workspace = true }
pallet-membership = { default-features = false, workspace = true }
pallet-scheduler = { default-features = false, workspace = true }
pallet-bounties = { default-features = false, workspace = true }
pallet-preimage = { default-features = false, workspace = true }
pallet-indices = { default-features = false, workspace = true }
pallet-identity = { default-features = false, workspace = true }
pallet-proxy = { default-features = false, workspace = true }
pallet-recovery = { default-features = false, workspace = true }
pallet-election-provider-multi-phase = { default-features = false, workspace = true }
pallet-authority-discovery = { default-features = false, workspace = true }
pallet-child-bounties = { default-features = false, workspace = true }

#frame
frame-support = { default-features = false, workspace = true }
frame-system = { default-features = false, workspace = true }
frame-executive = { default-features = false, workspace = true }

#sp
sp-api = { default-features = false, workspace = true }
sp-offchain = { default-features = false, workspace = true }
sp-runtime = { default-features = false, workspace = true }
sp-session = { default-features = false, workspace = true }
sp-std = { default-features = false, workspace = true }
sp-transaction-pool = { default-features = false, workspace = true }
sp-version = { default-features = false, workspace = true }
sp-io = { workspace = true, default-features = false }

#added
sp-authority-discovery = { default-features = false, workspace = true }
sp-block-builder = { default-features = false, workspace = true }
sp-consensus-babe = { default-features = false, workspace = true }
sp-core = { default-features = false, workspace = true }
sp-inherents = { default-features = false, workspace = true }
sp-staking = { default-features = false, workspace = true }
sp-npos-elections = { default-features = false, workspace = true }
frame-election-provider-support = { default-features = false, workspace = true }
#pallet-randomness-collective-flip = { default-features = false, workspace = true }
pallet-assets = { default-features = false, workspace = true }
#end added

# Used for the node template"s RPCs
frame-system-rpc-runtime-api = { default-features = false, workspace = true }

# Used for runtime benchmarking
frame-benchmarking = { default-features = false, workspace = true, optional = true }
frame-system-benchmarking = { default-features = false, workspace = true, optional = true }

# ORML Pallets
orml-vesting = { workspace = true, default-features = false }

# Local Dependecies
polkadex-primitives = { workspace = true, default-features = false }
pdex-migration = { path = "../pallets/pdex-migration", default-features = false }

# Orderbook 
pallet-ocex-lmp = { path = "../pallets/ocex", default-features = false }

# Thea
thea = { path = "../pallets/thea", default-features = false }
thea-executor = { path = "../pallets/thea-executor", default-features = false }
thea-message-handler = { path = "../pallets/thea-message-handler", default-features = false, optional = true }

# Liquidity Pallet
liquidity = { path = "../pallets/liquidity", default-features = false }

# Parachain Rewards
pallet-rewards = { path = "../pallets/rewards", default-features = false }
# Try Runtime
frame-try-runtime = { workspace = true, optional = true, default-features = false }

rpc-assets-runtime-api = { path = "../rpc/assets/runtime-api", default-features = false }
pallet-rewards-runtime-api = { path = "../pallets/rewards/rpc/runtime-api", default-features = false }

[build-dependencies]
substrate-wasm-builder = { workspace = true }

[features]
default = ["std"]
std = [
  "parity-scale-codec/std",
  "scale-info/std",
  "log/std",
  "pallet-authorship/std",
  "pallet-babe/std",
  "pallet-balances/std",
  "pallet-grandpa/std",
  "pallet-im-online/std",
  "pallet-offences/std",
  "pallet-session/std",
  "pallet-staking/std",
  "pallet-multisig/std",
  "pallet-sudo/std",
  "pallet-utility/std",
  "pallet-timestamp/std",
  "pallet-transaction-payment/std",
  "pallet-transaction-payment-rpc-runtime-api/std",
  "pallet-treasury/std",
  "pallet-collective/std",
  "pallet-democracy/std",
  "pallet-elections-phragmen/std",
  "pallet-membership/std",
  "pallet-scheduler/std",
  "pallet-bounties/std",
  "pallet-preimage/std",
  "pallet-indices/std",
  "pallet-identity/std",
  "pallet-proxy/std",
  "pallet-recovery/std",
  "pallet-election-provider-multi-phase/std",
  "pallet-authority-discovery/std",
  "pallet-child-bounties/std",
  "frame-support/std",
  "frame-system/std",
  "frame-executive/std",
  "sp-api/std",
  "sp-offchain/std",
  "sp-runtime/std",
  "sp-session/std",
  "sp-std/std",
  "sp-transaction-pool/std",
  "sp-version/std",
  "sp-io/std",
  "sp-authority-discovery/std",
  "sp-block-builder/std",
  "sp-consensus-babe/std",
  "sp-core/std",
  "sp-inherents/std",
  "sp-staking/std",
  "sp-npos-elections/std",
  "frame-election-provider-support/std",
  #"pallet-randomness-collective-flip/std",
  "pallet-assets/std",
  "frame-system-rpc-runtime-api/std",
  "orml-vesting/std",
  "polkadex-primitives/std",
  "pdex-migration/std",
  "pallet-ocex-lmp/std",
  "rpc-assets-runtime-api/std",
  "pallet-rewards-runtime-api/std",
  "thea/std",
  "liquidity/std",
  "pallet-rewards/std",
  "thea-executor/std",
  "frame-try-runtime?/std",
  "thea-message-handler?/std",
]
runtime-benchmarks = [
  #theirs
  "frame-support/runtime-benchmarks",
  "frame-system/runtime-benchmarks",
  "frame-benchmarking/runtime-benchmarks",
  "frame-system-benchmarking",
  "sp-runtime/runtime-benchmarks",
  "hex-literal",
  "pallet-assets/runtime-benchmarks",
  "pallet-collective/runtime-benchmarks",
  #our
  "pallet-ocex-lmp/runtime-benchmarks",
  "pdex-migration/runtime-benchmarks",
  "pallet-rewards/runtime-benchmarks",
  "liquidity/runtime-benchmarks",
  "thea/runtime-benchmarks",
  "thea-executor/runtime-benchmarks",
  "thea-message-handler/runtime-benchmarks",
]

try-runtime = [
  "frame-executive/try-runtime",
  "frame-try-runtime/try-runtime",
  "frame-system/try-runtime",
  "pallet-utility/try-runtime",
  "pallet-babe/try-runtime",
  "pallet-timestamp/try-runtime",
  "pallet-authorship/try-runtime",
  "pallet-indices/try-runtime",
  "pallet-balances/try-runtime",
  "pallet-transaction-payment/try-runtime",
  "pallet-election-provider-multi-phase/try-runtime",
  "pallet-staking/try-runtime",
  "pallet-session/try-runtime",
  "pallet-collective/try-runtime",
  "pallet-elections-phragmen/try-runtime",
  "pallet-membership/try-runtime",
  "pallet-grandpa/try-runtime",
  "pallet-treasury/try-runtime",
  "pallet-sudo/try-runtime",
  "pallet-im-online/try-runtime",
  "pallet-authority-discovery/try-runtime",
  "pallet-offences/try-runtime",
  "pallet-session/try-runtime",
  "pallet-identity/try-runtime",
  "pallet-recovery/try-runtime",
  "pallet-scheduler/try-runtime",
  "pallet-proxy/try-runtime",
  "pallet-multisig/try-runtime",
  "pallet-bounties/try-runtime",
  "orml-vesting/try-runtime",
  "pdex-migration/try-runtime",
  "pallet-democracy/try-runtime",
  "pallet-preimage/try-runtime",
  #"pallet-randomness-collective-flip/try-runtime",
  "pallet-child-bounties/try-runtime",
  "pallet-assets/try-runtime",
  "pallet-ocex-lmp/try-runtime",
  "pallet-collective/try-runtime",
  "thea/try-runtime",
  "pallet-rewards/try-runtime",
  "liquidity/try-runtime",
  "thea-executor/try-runtime",
]
