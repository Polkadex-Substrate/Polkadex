//! Autogenerated weights for `pallet_ocex_lmp`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2024-03-05, STEPS: `100`, REPEAT: `200`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `ip-172-31-9-163`, CPU: `AMD EPYC 7571`
//! WASM-EXECUTION: `Compiled`, CHAIN: `None`, DB CACHE: 1024

// Executed Command:
// ./polkadex-node
// benchmark
// pallet
// --pallet
// pallet-ocex-lmp
// --steps
// 100
// --repeat
// 200
// --extrinsic
// *
// --output
// pallet_ocex_lmp_weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

/// Weight functions for `pallet_ocex_lmp`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> crate::OcexWeightInfo for WeightInfo<T> {
	/// Storage: `OCEX::ExchangeState` (r:1 w:0)
	/// Proof: `OCEX::ExchangeState` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::Accounts` (r:1 w:1)
	/// Proof: `OCEX::Accounts` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::Proxies` (r:1 w:1)
	/// Proof: `OCEX::Proxies` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::IngressMessages` (r:1 w:1)
	/// Proof: `OCEX::IngressMessages` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `b` is `[0, 255]`.
	fn register_main_account(b: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `167`
		//  Estimated: `3632`
		// Minimum execution time: 62_580_000 picoseconds.
		Weight::from_parts(64_219_291, 0)
			.saturating_add(Weight::from_parts(0, 3632))
			// Standard Error: 51
			.saturating_add(Weight::from_parts(2_279, 0).saturating_mul(b.into()))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: `OCEX::ExchangeState` (r:1 w:0)
	/// Proof: `OCEX::ExchangeState` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::Accounts` (r:1 w:1)
	/// Proof: `OCEX::Accounts` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::Proxies` (r:1 w:1)
	/// Proof: `OCEX::Proxies` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::IngressMessages` (r:1 w:1)
	/// Proof: `OCEX::IngressMessages` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `x` is `[0, 255]`.
	fn add_proxy_account(x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `499`
		//  Estimated: `3964`
		// Minimum execution time: 77_011_000 picoseconds.
		Weight::from_parts(79_608_430, 0)
			.saturating_add(Weight::from_parts(0, 3964))
			// Standard Error: 49
			.saturating_add(Weight::from_parts(160, 0).saturating_mul(x.into()))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: `OCEX::ExchangeState` (r:1 w:0)
	/// Proof: `OCEX::ExchangeState` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::TradingPairs` (r:1 w:1)
	/// Proof: `OCEX::TradingPairs` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::IngressMessages` (r:1 w:1)
	/// Proof: `OCEX::IngressMessages` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `x` is `[1, 50000]`.
	fn close_trading_pair(_x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `359`
		//  Estimated: `3824`
		// Minimum execution time: 60_581_000 picoseconds.
		Weight::from_parts(62_177_551, 0)
			.saturating_add(Weight::from_parts(0, 3824))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `OCEX::ExchangeState` (r:1 w:0)
	/// Proof: `OCEX::ExchangeState` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::TradingPairs` (r:1 w:1)
	/// Proof: `OCEX::TradingPairs` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::IngressMessages` (r:1 w:1)
	/// Proof: `OCEX::IngressMessages` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `x` is `[0, 100000]`.
	fn open_trading_pair(_x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `359`
		//  Estimated: `3824`
		// Minimum execution time: 60_630_000 picoseconds.
		Weight::from_parts(62_321_908, 0)
			.saturating_add(Weight::from_parts(0, 3824))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `OCEX::ExchangeState` (r:1 w:0)
	/// Proof: `OCEX::ExchangeState` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::TradingPairs` (r:2 w:1)
	/// Proof: `OCEX::TradingPairs` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::AllowlistedToken` (r:1 w:0)
	/// Proof: `OCEX::AllowlistedToken` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::IngressMessages` (r:1 w:1)
	/// Proof: `OCEX::IngressMessages` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `x` is `[0, 100000]`.
	fn register_trading_pair(_x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `224`
		//  Estimated: `6164`
		// Minimum execution time: 72_580_000 picoseconds.
		Weight::from_parts(74_688_581, 0)
			.saturating_add(Weight::from_parts(0, 6164))
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `OCEX::ExchangeState` (r:1 w:0)
	/// Proof: `OCEX::ExchangeState` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::TradingPairs` (r:1 w:1)
	/// Proof: `OCEX::TradingPairs` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::IngressMessages` (r:1 w:1)
	/// Proof: `OCEX::IngressMessages` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `x` is `[0, 100000]`.
	fn update_trading_pair(_x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `388`
		//  Estimated: `3853`
		// Minimum execution time: 68_600_000 picoseconds.
		Weight::from_parts(70_833_615, 0)
			.saturating_add(Weight::from_parts(0, 3853))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `OCEX::ExchangeState` (r:1 w:0)
	/// Proof: `OCEX::ExchangeState` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::AllowlistedToken` (r:1 w:0)
	/// Proof: `OCEX::AllowlistedToken` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::Accounts` (r:1 w:0)
	/// Proof: `OCEX::Accounts` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(222), added: 2697, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:2 w:1)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(146), added: 2621, mode: `MaxEncodedLen`)
	/// Storage: `OCEX::TotalAssets` (r:1 w:1)
	/// Proof: `OCEX::TotalAssets` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::IngressMessages` (r:1 w:1)
	/// Proof: `OCEX::IngressMessages` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `x` is `[1, 255]`.
	fn deposit(_x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `773`
		//  Estimated: `6232`
		// Minimum execution time: 158_171_000 picoseconds.
		Weight::from_parts(161_592_723, 0)
			.saturating_add(Weight::from_parts(0, 6232))
			.saturating_add(T::DbWeight::get().reads(8))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	/// Storage: `OCEX::ExchangeState` (r:1 w:0)
	/// Proof: `OCEX::ExchangeState` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::Accounts` (r:1 w:1)
	/// Proof: `OCEX::Accounts` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::IngressMessages` (r:1 w:1)
	/// Proof: `OCEX::IngressMessages` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::Proxies` (r:0 w:1)
	/// Proof: `OCEX::Proxies` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `x` is `[1, 255]`.
	fn remove_proxy_account(_x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `462`
		//  Estimated: `3927`
		// Minimum execution time: 65_600_000 picoseconds.
		Weight::from_parts(67_673_877, 0)
			.saturating_add(Weight::from_parts(0, 3927))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: `OCEX::FinalizeLMPScore` (r:1 w:0)
	/// Proof: `OCEX::FinalizeLMPScore` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `OCEX::OnChainEvents` (r:1 w:1)
	/// Proof: `OCEX::OnChainEvents` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::IngressMessages` (r:1 w:1)
	/// Proof: `OCEX::IngressMessages` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::Withdrawals` (r:0 w:1)
	/// Proof: `OCEX::Withdrawals` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::Snapshots` (r:0 w:1)
	/// Proof: `OCEX::Snapshots` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::SnapshotNonce` (r:0 w:1)
	/// Proof: `OCEX::SnapshotNonce` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn submit_snapshot() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `333`
		//  Estimated: `3798`
		// Minimum execution time: 1_430_335_000 picoseconds.
		Weight::from_parts(1_461_555_000, 0)
			.saturating_add(Weight::from_parts(0, 3798))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(6))
	}
	/// Storage: `OCEX::IngressMessages` (r:1 w:1)
	/// Proof: `OCEX::IngressMessages` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::ExchangeState` (r:0 w:1)
	/// Proof: `OCEX::ExchangeState` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// The range of component `x` is `[0, 100000]`.
	fn set_exchange_state(x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `167`
		//  Estimated: `3632`
		// Minimum execution time: 38_190_000 picoseconds.
		Weight::from_parts(39_450_923, 0)
			.saturating_add(Weight::from_parts(0, 3632))
			// Standard Error: 0
			.saturating_add(Weight::from_parts(1, 0).saturating_mul(x.into()))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `OCEX::Withdrawals` (r:1 w:1)
	/// Proof: `OCEX::Withdrawals` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(222), added: 2697, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:2 w:1)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(146), added: 2621, mode: `MaxEncodedLen`)
	/// Storage: `OCEX::OnChainEvents` (r:1 w:1)
	/// Proof: `OCEX::OnChainEvents` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// The range of component `x` is `[1, 255]`.
	fn claim_withdraw(x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `763`
		//  Estimated: `6232`
		// Minimum execution time: 144_320_000 picoseconds.
		Weight::from_parts(147_449_100, 0)
			.saturating_add(Weight::from_parts(0, 6232))
			// Standard Error: 77
			.saturating_add(Weight::from_parts(202, 0).saturating_mul(x.into()))
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	/// Storage: `OCEX::AllowlistedToken` (r:1 w:1)
	/// Proof: `OCEX::AllowlistedToken` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// The range of component `x` is `[0, 65000]`.
	fn allowlist_token(_x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `167`
		//  Estimated: `1652`
		// Minimum execution time: 33_740_000 picoseconds.
		Weight::from_parts(35_028_116, 0)
			.saturating_add(Weight::from_parts(0, 1652))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `OCEX::AllowlistedToken` (r:1 w:1)
	/// Proof: `OCEX::AllowlistedToken` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// The range of component `x` is `[0, 65000]`.
	fn remove_allowlisted_token(_x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `205`
		//  Estimated: `1690`
		// Minimum execution time: 36_640_000 picoseconds.
		Weight::from_parts(38_065_860, 0)
			.saturating_add(Weight::from_parts(0, 1690))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `OCEX::SnapshotNonce` (r:0 w:1)
	/// Proof: `OCEX::SnapshotNonce` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn set_snapshot() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 10_740_000 picoseconds.
		Weight::from_parts(11_160_000, 0)
			.saturating_add(Weight::from_parts(0, 0))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `OCEX::OrderbookOperatorPublicKey` (r:0 w:1)
	/// Proof: `OCEX::OrderbookOperatorPublicKey` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn whitelist_orderbook_operator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 24_290_000 picoseconds.
		Weight::from_parts(25_000_000, 0)
			.saturating_add(Weight::from_parts(0, 0))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `OCEX::LMPClaimBlk` (r:1 w:0)
	/// Proof: `OCEX::LMPClaimBlk` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::LMPConfig` (r:1 w:0)
	/// Proof: `OCEX::LMPConfig` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::TotalScores` (r:1 w:0)
	/// Proof: `OCEX::TotalScores` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::TraderMetrics` (r:1 w:0)
	/// Proof: `OCEX::TraderMetrics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn claim_lmp_rewards() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1268`
		//  Estimated: `6196`
		// Minimum execution time: 197_880_000 picoseconds.
		Weight::from_parts(199_690_000, 0)
			.saturating_add(Weight::from_parts(0, 6196))
			.saturating_add(T::DbWeight::get().reads(6))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `OCEX::ExpectedLMPConfig` (r:1 w:1)
	/// Proof: `OCEX::ExpectedLMPConfig` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::TradingPairs` (r:1 w:0)
	/// Proof: `OCEX::TradingPairs` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::IngressMessages` (r:1 w:1)
	/// Proof: `OCEX::IngressMessages` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn set_lmp_epoch_config() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `419`
		//  Estimated: `3884`
		// Minimum execution time: 49_100_000 picoseconds.
		Weight::from_parts(49_951_000, 0)
			.saturating_add(Weight::from_parts(0, 3884))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `OCEX::FeeDistributionConfig` (r:0 w:1)
	/// Proof: `OCEX::FeeDistributionConfig` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn set_fee_distribution() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 11_680_000 picoseconds.
		Weight::from_parts(12_120_000, 0)
			.saturating_add(Weight::from_parts(0, 0))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `OCEX::Auction` (r:1 w:1)
	/// Proof: `OCEX::Auction` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn place_bid() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `326`
		//  Estimated: `3593`
		// Minimum execution time: 81_830_000 picoseconds.
		Weight::from_parts(83_280_000, 0)
			.saturating_add(Weight::from_parts(0, 3593))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `OCEX::OnChainEvents` (r:1 w:0)
	/// Proof: `OCEX::OnChainEvents` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::AuctionBlockNumber` (r:1 w:1)
	/// Proof: `OCEX::AuctionBlockNumber` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::Auction` (r:1 w:1)
	/// Proof: `OCEX::Auction` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::AllowlistedToken` (r:1 w:0)
	/// Proof: `OCEX::AllowlistedToken` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Assets::Asset` (r:2 w:0)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(222), added: 2697, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:2 w:0)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(146), added: 2621, mode: `MaxEncodedLen`)
	/// Storage: `OCEX::FeeDistributionConfig` (r:1 w:0)
	/// Proof: `OCEX::FeeDistributionConfig` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn on_initialize() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `948`
		//  Estimated: `6384`
		// Minimum execution time: 92_200_000 picoseconds.
		Weight::from_parts(93_700_000, 0)
			.saturating_add(Weight::from_parts(0, 6384))
			.saturating_add(T::DbWeight::get().reads(9))
			.saturating_add(T::DbWeight::get().writes(2))
	}
}
