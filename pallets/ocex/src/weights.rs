//! Autogenerated weights for `pallet_ocex_lmp`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-10-31, STEPS: `100`, REPEAT: `200`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `ip-172-31-41-122`, CPU: `AMD EPYC 7571`
//! WASM-EXECUTION: `Compiled`, CHAIN: `None`, DB CACHE: 1024

// Executed Command:
// ./polkadex-node
// benchmark
// pallet
// --pallet
// pallet-ocex-lmp
// --steps
// 100
// --repeat
// 200
// --extrinsic
// *
// --output
// weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

/// Weight functions for `pallet_ocex_lmp`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> crate::OcexWeightInfo for WeightInfo<T> {
	/// Storage: `OCEX::ExchangeState` (r:1 w:0)
	/// Proof: `OCEX::ExchangeState` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::Accounts` (r:1 w:1)
	/// Proof: `OCEX::Accounts` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::IngressMessages` (r:1 w:1)
	/// Proof: `OCEX::IngressMessages` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `b` is `[0, 50000]`.
	fn register_main_account(b: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `167`
		//  Estimated: `3632`
		// Minimum execution time: 51_850_000 picoseconds.
		Weight::from_parts(53_310_833, 0)
			.saturating_add(Weight::from_parts(0, 3632))
			// Standard Error: 0
			.saturating_add(Weight::from_parts(1, 0).saturating_mul(b.into()))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `OCEX::ExchangeState` (r:1 w:0)
	/// Proof: `OCEX::ExchangeState` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::Accounts` (r:1 w:1)
	/// Proof: `OCEX::Accounts` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::IngressMessages` (r:1 w:1)
	/// Proof: `OCEX::IngressMessages` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `x` is `[0, 255]`.
	fn add_proxy_account(x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `397`
		//  Estimated: `3862`
		// Minimum execution time: 64_241_000 picoseconds.
		Weight::from_parts(66_354_637, 0)
			.saturating_add(Weight::from_parts(0, 3862))
			// Standard Error: 53
			.saturating_add(Weight::from_parts(185, 0).saturating_mul(x.into()))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `OCEX::ExchangeState` (r:1 w:0)
	/// Proof: `OCEX::ExchangeState` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::TradingPairs` (r:1 w:1)
	/// Proof: `OCEX::TradingPairs` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::IngressMessages` (r:1 w:1)
	/// Proof: `OCEX::IngressMessages` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `x` is `[1, 50000]`.
	fn close_trading_pair(_x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `391`
		//  Estimated: `3856`
		// Minimum execution time: 60_380_000 picoseconds.
		Weight::from_parts(62_400_069, 0)
			.saturating_add(Weight::from_parts(0, 3856))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `OCEX::ExchangeState` (r:1 w:0)
	/// Proof: `OCEX::ExchangeState` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::TradingPairs` (r:1 w:1)
	/// Proof: `OCEX::TradingPairs` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::IngressMessages` (r:1 w:1)
	/// Proof: `OCEX::IngressMessages` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `x` is `[0, 100000]`.
	fn open_trading_pair(_x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `391`
		//  Estimated: `3856`
		// Minimum execution time: 60_330_000 picoseconds.
		Weight::from_parts(62_463_308, 0)
			.saturating_add(Weight::from_parts(0, 3856))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `OCEX::ExchangeState` (r:1 w:0)
	/// Proof: `OCEX::ExchangeState` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::TradingPairs` (r:2 w:1)
	/// Proof: `OCEX::TradingPairs` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::IngressMessages` (r:1 w:1)
	/// Proof: `OCEX::IngressMessages` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `x` is `[0, 100000]`.
	fn register_trading_pair(_x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `167`
		//  Estimated: `6107`
		// Minimum execution time: 61_451_000 picoseconds.
		Weight::from_parts(63_298_163, 0)
			.saturating_add(Weight::from_parts(0, 6107))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `OCEX::ExchangeState` (r:1 w:0)
	/// Proof: `OCEX::ExchangeState` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::TradingPairs` (r:1 w:1)
	/// Proof: `OCEX::TradingPairs` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::IngressMessages` (r:1 w:1)
	/// Proof: `OCEX::IngressMessages` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `x` is `[0, 100000]`.
	fn update_trading_pair(_x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `420`
		//  Estimated: `3885`
		// Minimum execution time: 69_131_000 picoseconds.
		Weight::from_parts(71_264_937, 0)
			.saturating_add(Weight::from_parts(0, 3885))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `OCEX::ExchangeState` (r:1 w:0)
	/// Proof: `OCEX::ExchangeState` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::AllowlistedToken` (r:1 w:0)
	/// Proof: `OCEX::AllowlistedToken` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::Accounts` (r:1 w:0)
	/// Proof: `OCEX::Accounts` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(222), added: 2697, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:2 w:1)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(146), added: 2621, mode: `MaxEncodedLen`)
	/// Storage: `OCEX::TotalAssets` (r:1 w:1)
	/// Proof: `OCEX::TotalAssets` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::IngressMessages` (r:1 w:1)
	/// Proof: `OCEX::IngressMessages` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `x` is `[1, 255]`.
	fn deposit(_x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `740`
		//  Estimated: `6232`
		// Minimum execution time: 157_380_000 picoseconds.
		Weight::from_parts(161_320_231, 0)
			.saturating_add(Weight::from_parts(0, 6232))
			.saturating_add(T::DbWeight::get().reads(8))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	/// Storage: `OCEX::ExchangeState` (r:1 w:0)
	/// Proof: `OCEX::ExchangeState` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::Accounts` (r:1 w:1)
	/// Proof: `OCEX::Accounts` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::IngressMessages` (r:1 w:1)
	/// Proof: `OCEX::IngressMessages` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `x` is `[1, 255]`.
	fn remove_proxy_account(x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `429`
		//  Estimated: `3894`
		// Minimum execution time: 61_141_000 picoseconds.
		Weight::from_parts(63_226_268, 0)
			.saturating_add(Weight::from_parts(0, 3894))
			// Standard Error: 40
			.saturating_add(Weight::from_parts(47, 0).saturating_mul(x.into()))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `OCEX::OnChainEvents` (r:1 w:1)
	/// Proof: `OCEX::OnChainEvents` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::Withdrawals` (r:0 w:1)
	/// Proof: `OCEX::Withdrawals` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::Snapshots` (r:0 w:1)
	/// Proof: `OCEX::Snapshots` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::FeesCollected` (r:0 w:1)
	/// Proof: `OCEX::FeesCollected` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::SnapshotNonce` (r:0 w:1)
	/// Proof: `OCEX::SnapshotNonce` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn submit_snapshot() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `193`
		//  Estimated: `1678`
		// Minimum execution time: 71_880_000 picoseconds.
		Weight::from_parts(73_361_000, 0)
			.saturating_add(Weight::from_parts(0, 1678))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(5))
	}
	/// Storage: `OCEX::FeesCollected` (r:1 w:1)
	/// Proof: `OCEX::FeesCollected` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `x` is `[0, 255]`.
	fn collect_fees(_x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `200`
		//  Estimated: `3665`
		// Minimum execution time: 34_871_000 picoseconds.
		Weight::from_parts(36_428_978, 0)
			.saturating_add(Weight::from_parts(0, 3665))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `OCEX::IngressMessages` (r:1 w:1)
	/// Proof: `OCEX::IngressMessages` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::ExchangeState` (r:0 w:1)
	/// Proof: `OCEX::ExchangeState` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// The range of component `x` is `[0, 100000]`.
	fn set_exchange_state(_x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `167`
		//  Estimated: `3632`
		// Minimum execution time: 38_430_000 picoseconds.
		Weight::from_parts(40_019_866, 0)
			.saturating_add(Weight::from_parts(0, 3632))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(2))
	}

	/// Storage: `OCEX::Withdrawals` (r:1 w:1)
	/// Proof: `OCEX::Withdrawals` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(222), added: 2697, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:2 w:1)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(146), added: 2621, mode: `MaxEncodedLen`)
	/// Storage: `OCEX::OnChainEvents` (r:1 w:1)
	/// Proof: `OCEX::OnChainEvents` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// The range of component `x` is `[1, 255]`.
	fn claim_withdraw(_x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `763`
		//  Estimated: `6232`
		// Minimum execution time: 143_921_000 picoseconds.
		Weight::from_parts(146_859_658, 0)
			.saturating_add(Weight::from_parts(0, 6232))
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	/// Storage: `OCEX::AllowlistedToken` (r:1 w:1)
	/// Proof: `OCEX::AllowlistedToken` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// The range of component `x` is `[0, 65000]`.
	fn allowlist_token(_x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `167`
		//  Estimated: `1652`
		// Minimum execution time: 33_820_000 picoseconds.
		Weight::from_parts(35_244_862, 0)
			.saturating_add(Weight::from_parts(0, 1652))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `OCEX::AllowlistedToken` (r:1 w:1)
	/// Proof: `OCEX::AllowlistedToken` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// The range of component `x` is `[0, 65000]`.
	fn remove_allowlisted_token(_x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `205`
		//  Estimated: `1690`
		// Minimum execution time: 36_771_000 picoseconds.
		Weight::from_parts(38_446_758, 0)
			.saturating_add(Weight::from_parts(0, 1690))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `OCEX::SnapshotNonce` (r:0 w:1)
	/// Proof: `OCEX::SnapshotNonce` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn set_snapshot() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 11_420_000 picoseconds.
		Weight::from_parts(11_850_000, 0)
			.saturating_add(Weight::from_parts(0, 0))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `OCEX::OrderbookOperatorPublicKey` (r:0 w:1)
	/// Proof: `OCEX::OrderbookOperatorPublicKey` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn whitelist_orderbook_operator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 25_040_000 picoseconds.
		Weight::from_parts(25_840_000, 0)
			.saturating_add(Weight::from_parts(0, 0))
			.saturating_add(T::DbWeight::get().writes(1))
	}
}
