
//! Autogenerated weights for `asset_handler`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-06-11, STEPS: `1`, REPEAT: 1, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: None, WASM-EXECUTION: Compiled, CHAIN: None, DB CACHE: 1024

// Executed Command:
// ./target/release/polkadex-node
// benchmark
// pallet
// --pallet
// asset-handler
// --extrinsic
// *
// --output
// pallets/asset-handler/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

pub trait AssetHandlerWeightInfo {
	fn create_asset(_b: u32) -> Weight;
	fn mint_asset(_b: u32) -> Weight;
	fn update_fee(m: u32, f: u32, ) -> Weight;
	fn withdraw(_b: u32, _c: u32, ) -> Weight;
}

/// Weight functions for `asset_handler`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> AssetHandlerWeightInfo for WeightInfo<T> {
	// Storage: Assets Asset (r:1 w:1)
	fn create_asset(_b: u32, ) -> Weight {
		(21_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: ChainBridge Relayers (r:1 w:0)
	// Storage: Assets Asset (r:1 w:1)
	// Storage: Assets Account (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	fn mint_asset(_b: u32, ) -> Weight {
		(45_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: AssetHandler BridgeFee (r:0 w:1)
	fn update_fee(m: u32, f: u32, ) -> Weight {
		(12_989_000 as Weight)
			// Standard Error: 17_000
			.saturating_add((10_000 as Weight).saturating_mul(m as Weight))
			// Standard Error: 1_000
			.saturating_add((1_000 as Weight).saturating_mul(f as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: ChainBridge ChainNonces (r:1 w:1)
	// Storage: Assets Asset (r:1 w:1)
	// Storage: Assets Account (r:1 w:1)
	// Storage: AssetHandler BridgeFee (r:1 w:0)
	// Storage: ChainBridge BridgeEvents (r:1 w:1)
	fn withdraw(_b: u32, _c: u32, ) -> Weight {
		(56_096_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(5 as Weight))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
	}
}
