//! Autogenerated weights for `pallet_thea`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-04-04, STEPS: `25`, REPEAT: 100, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 128

// Executed Command:
// ./polkadex-node
// benchmark
// --chain
// dev
// --execution
// wasm
// --wasm-execution
// compiled
// --pallet
// pallet_thea
// --extrinsic
// *
// --steps
// 25
// --repeat
// 100
// --output
// ./

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `pallet_thea`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> super::TheaWeightInfo for WeightInfo<T> {
	// Storage: Thea KeygenMessages (r:0 w:1)
	fn submit_keygen_message(b: u32, ) -> Weight {
		(132_852_000 as Weight)
			// Standard Error: 0
			.saturating_add((1_000 as Weight).saturating_mul(b as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Thea KeygenMessages (r:0 w:1)
	// Storage: Thea OfflineMessages (r:0 w:1)
	fn clean_keygen_messages(b: u32, ) -> Weight {
		(30_708_000 as Weight)
			// Standard Error: 0
			.saturating_add((1_000 as Weight).saturating_mul(b as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: Thea OfflineMessages (r:0 w:1)
	fn submit_offline_message(b: u32, ) -> Weight {
		(18_444_000 as Weight)
			// Standard Error: 0
			.saturating_add((1_000 as Weight).saturating_mul(b as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Thea SigningMessages (r:0 w:1)
	fn submit_signing_message(_b: u32, ) -> Weight {
		(18_118_000 as Weight)
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Ethereum Withdrawals (r:1 w:1)
	fn submit_signed_payload(_b: u32, ) -> Weight {
		(26_781_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Thea PublicKeys (r:0 w:1)
	fn submit_ecdsa_public_key(_b: u32, ) -> Weight {
		(16_583_000 as Weight)
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Thea RegisteredDepositAddress (r:0 w:1)
	fn register_deposit_address() -> Weight {
		(16_385_000 as Weight)
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
}
