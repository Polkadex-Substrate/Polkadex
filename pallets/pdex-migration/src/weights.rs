//! Autogenerated weights for `pdex_migration`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2024-03-05, STEPS: `100`, REPEAT: `200`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `ip-172-31-9-163`, CPU: `AMD EPYC 7571`
//! WASM-EXECUTION: `Compiled`, CHAIN: `None`, DB CACHE: 1024

// Executed Command:
// ./polkadex-node
// benchmark
// pallet
// --pallet
// pdex-migration
// --steps
// 100
// --repeat
// 200
// --extrinsic
// *
// --output
// pdex_migration_weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

/// Weight functions for `pdex_migration`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> crate::WeightInfo for WeightInfo<T> {
	/// Storage: `PDEXMigration::Operational` (r:0 w:1)
	/// Proof: `PDEXMigration::Operational` (`max_values`: Some(1), `max_size`: Some(1), added: 496, mode: `MaxEncodedLen`)
	fn set_migration_operational_status() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 10_540_000 picoseconds.
		Weight::from_parts(10_920_000, 0)
			.saturating_add(Weight::from_parts(0, 0))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `PDEXMigration::Relayers` (r:0 w:1)
	/// Proof: `PDEXMigration::Relayers` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	fn set_relayer_status() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 27_300_000 picoseconds.
		Weight::from_parts(27_950_000, 0)
			.saturating_add(Weight::from_parts(0, 0))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `PDEXMigration::Operational` (r:1 w:0)
	/// Proof: `PDEXMigration::Operational` (`max_values`: Some(1), `max_size`: Some(1), added: 496, mode: `MaxEncodedLen`)
	/// Storage: `PDEXMigration::EthTxns` (r:1 w:1)
	/// Proof: `PDEXMigration::EthTxns` (`max_values`: None, `max_size`: Some(147), added: 2622, mode: `MaxEncodedLen`)
	/// Storage: `PDEXMigration::Relayers` (r:1 w:0)
	/// Proof: `PDEXMigration::Relayers` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `PDEXMigration::MintableTokens` (r:1 w:1)
	/// Proof: `PDEXMigration::MintableTokens` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(849), added: 3324, mode: `MaxEncodedLen`)
	/// Storage: `PDEXMigration::LockedTokenHolders` (r:0 w:1)
	/// Proof: `PDEXMigration::LockedTokenHolders` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// The range of component `b` is `[1, 254]`.
	fn mint(b: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `985`
		//  Estimated: `4764`
		// Minimum execution time: 208_200_000 picoseconds.
		Weight::from_parts(211_398_222, 0)
			.saturating_add(Weight::from_parts(0, 4764))
			// Standard Error: 95
			.saturating_add(Weight::from_parts(4_847, 0).saturating_mul(b.into()))
			.saturating_add(T::DbWeight::get().reads(6))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	/// Storage: `PDEXMigration::Operational` (r:1 w:0)
	/// Proof: `PDEXMigration::Operational` (`max_values`: Some(1), `max_size`: Some(1), added: 496, mode: `MaxEncodedLen`)
	/// Storage: `PDEXMigration::LockedTokenHolders` (r:1 w:1)
	/// Proof: `PDEXMigration::LockedTokenHolders` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(849), added: 3324, mode: `MaxEncodedLen`)
	/// The range of component `b` is `[1, 254]`.
	fn unlock(_b: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `882`
		//  Estimated: `4764`
		// Minimum execution time: 104_620_000 picoseconds.
		Weight::from_parts(106_992_318, 0)
			.saturating_add(Weight::from_parts(0, 4764))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `PDEXMigration::LockedTokenHolders` (r:1 w:1)
	/// Proof: `PDEXMigration::LockedTokenHolders` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(849), added: 3324, mode: `MaxEncodedLen`)
	/// Storage: `PDEXMigration::MintableTokens` (r:1 w:1)
	/// Proof: `PDEXMigration::MintableTokens` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// The range of component `b` is `[1, 254]`.
	fn remove_minted_tokens(b: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `885`
		//  Estimated: `4764`
		// Minimum execution time: 208_561_000 picoseconds.
		Weight::from_parts(212_307_654, 0)
			.saturating_add(Weight::from_parts(0, 4764))
			// Standard Error: 104
			.saturating_add(Weight::from_parts(54, 0).saturating_mul(b.into()))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(3))
	}
}
