//! Autogenerated weights for `liquidity`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-10-24, STEPS: `100`, REPEAT: `200`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `ip-172-31-41-122`, CPU: `AMD EPYC 7571`
//! WASM-EXECUTION: `Compiled`, CHAIN: `None`, DB CACHE: 1024

// Executed Command:
// ./polkadex-node
// benchmark
// pallet
// --pallet
// liquidity
// --steps
// 100
// --repeat
// 200
// --extrinsic
// *
// --output
// liquidity_weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

/// Weight functions for `liquidity`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> crate::WeightInfo for WeightInfo<T> {
	/// Storage: `Liquidity::RegisterGovernanceAccounts` (r:1 w:1)
	/// Proof: `Liquidity::RegisterGovernanceAccounts` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::ExchangeState` (r:1 w:0)
	/// Proof: `OCEX::ExchangeState` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::Accounts` (r:1 w:1)
	/// Proof: `OCEX::Accounts` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::IngressMessages` (r:1 w:1)
	/// Proof: `OCEX::IngressMessages` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `a` is `[0, 4294967295]`.
	fn register_account(_a: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `243`
		//  Estimated: `3708`
		// Minimum execution time: 85_153_000 picoseconds.
		Weight::from_parts(87_170_413, 0)
			.saturating_add(Weight::from_parts(0, 3708))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: `Liquidity::RegisterGovernanceAccounts` (r:1 w:0)
	/// Proof: `Liquidity::RegisterGovernanceAccounts` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::ExchangeState` (r:1 w:0)
	/// Proof: `OCEX::ExchangeState` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::AllowlistedToken` (r:1 w:0)
	/// Proof: `OCEX::AllowlistedToken` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::Accounts` (r:1 w:0)
	/// Proof: `OCEX::Accounts` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(222), added: 2697, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:2 w:1)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(146), added: 2621, mode: `MaxEncodedLen`)
	/// Storage: `OCEX::TotalAssets` (r:1 w:1)
	/// Proof: `OCEX::TotalAssets` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::IngressMessages` (r:1 w:1)
	/// Proof: `OCEX::IngressMessages` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `a` is `[1, 4294967295]`.
	/// The range of component `i` is `[0, 4294967295]`.
	/// The range of component `z` is `[10, 4294967295]`.
	fn deposit_to_orderbook(_a: u32, _i: u32, _z: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `928`
		//  Estimated: `6232`
		// Minimum execution time: 201_478_000 picoseconds.
		Weight::from_parts(206_511_440, 0)
			.saturating_add(Weight::from_parts(0, 6232))
			.saturating_add(T::DbWeight::get().reads(9))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	/// Storage: `Liquidity::RegisterGovernanceAccounts` (r:1 w:0)
	/// Proof: `Liquidity::RegisterGovernanceAccounts` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::ExchangeState` (r:1 w:0)
	/// Proof: `OCEX::ExchangeState` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::AllowlistedToken` (r:1 w:0)
	/// Proof: `OCEX::AllowlistedToken` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::Accounts` (r:1 w:0)
	/// Proof: `OCEX::Accounts` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `OCEX::IngressMessages` (r:1 w:1)
	/// Proof: `OCEX::IngressMessages` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `a` is `[1, 4294967295]`.
	/// The range of component `i` is `[0, 4294967295]`.
	/// The range of component `z` is `[10, 4294967295]`.
	fn withdraw_from_orderbook(_a: u32, _i: u32, _z: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `553`
		//  Estimated: `4018`
		// Minimum execution time: 90_983_000 picoseconds.
		Weight::from_parts(93_871_114, 0)
			.saturating_add(Weight::from_parts(0, 4018))
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(1))
	}
}
